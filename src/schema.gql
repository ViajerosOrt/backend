# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Location {
  id: Int!
  name: String!
  state: String!
  address: String!
  longLatPoint: String!
  locationTravels: [Travel!]
}

type Travel {
  id: Int!
  travelTitle: String!
  travelDescription: String
  startDate: DateTime!
  finishDate: DateTime!
  max_cap: Int
  isEndable: Boolean!
  creatorUserId: Int!
  creatorUser: User!
  usersTravelers: [User!]
  travelActivities: [Activity!]
  locationId: Int!
  travelLocation: Location!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Activity {
  id: Int!
  activityName: String!
  userActivities: [User!]
  travelActivities: [Travel!]
}

type User {
  id: Int!
  name: String!
  email: String!
  password: String!
  birthDate: DateTime!
  description: String
  userActivities: [Activity!]
  travelsCreated: Travel
  joinsTravels: [Travel!]
}

type LoginResponse {
  access_token: String!
  user: User!
}

type Query {
  activities: [Activity!]!
  activity(id: Int!): Activity!
  users: [User!]!
  user(email: String!): User!
  travels: [Travel!]!
  travel(id: Int!): Travel!
  location(id: Int!): Location!
}

type Mutation {
  createActivity(activityInp: CreateActivityInput!): Activity!
  createUser(createUserInput: CreateUserInput!): User!
  addActivities(userId: Float!, activitiesIds: [Float!]!): User!
  updateUser(updateUserInput: UpdateUserInput!, userId: Float!): User!
  removeUser(id: Int!): User!
  createTravel(createTravelInput: CreateTravelInput!, activitiesId: [Float!]!, createLocationInput: CreateLocationInput!): Travel!
  joinToTravel(travelId: Int!): Travel!
  leaveTravel(travelId: Int!): Travel!
  updateTravel(updateTravelInput: UpdateTravelInput!): Travel!
  removeTravel(id: Int!): Travel!
  createLocation(createLocationInput: CreateLocationInput!): Location!
  updateLocation(updateLocationInput: UpdateLocationInput!): Location!
  removeLocation(id: Int!): Location!
  login(loginUserInput: LoginUserInput!): LoginResponse!
}

input CreateActivityInput {
  activityName: String!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
  birthDate: DateTime!
  description: String
}

input UpdateUserInput {
  name: String!
  email: String
  password: String!
  birthDate: DateTime
  description: String
}

input CreateTravelInput {
  travelTitle: String!
  travelDescription: String!
  startDate: DateTime!
  finishDate: DateTime!
  max_cap: Float!
  isEndable: Boolean!
  creatorUserId: Int!
}

input CreateLocationInput {
  name: String!
  state: String!
  address: String!
  longLatPoint: String!
}

input UpdateTravelInput {
  travelTitle: String
  travelDescription: String
  startDate: DateTime
  finishDate: DateTime
  max_cap: Float
  isEndable: Boolean
  creatorUserId: Int
  id: Int!
}

input UpdateLocationInput {
  name: String
  state: String
  address: String
  longLatPoint: String
  id: Int!
}

input LoginUserInput {
  email: String!
  password: String!
}